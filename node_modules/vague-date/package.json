{
  "name": "vague-date",
  "version": "0.1.2",
  "author": {
    "name": "Phil Booth",
    "email": "pmbooth@gmail.com"
  },
  "description": "A tiny JavaScript library that formats precise time differences as a vague/fuzzy date, e.g. 'yesterday', 'today' or 'next week'.",
  "contributors": [
    {
      "name": "Phil Booth",
      "email": "pmbooth@gmail.com"
    }
  ],
  "main": "./src/vagueDate.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/philbooth/vagueDate.js"
  },
  "keywords": [
    "time",
    "date",
    "fuzzy",
    "vague",
    "estimate",
    "ender"
  ],
  "ender": "noop",
  "jam": {
    "main": "src/vagueDate.js"
  },
  "devDependencies": {
    "jake": "0.5.x",
    "jshint": "0.9.x",
    "mocha": "1.7.x",
    "chai": "1.4.x",
    "uglify-js": "2.2.x"
  },
  "license": "MIT",
  "scripts": {
    "test": "jake test"
  },
  "readme": "# vagueDate.js\n\n[![Build status][ci-image]][ci-status]\n\nA tiny JavaScript library\nthat formats precise time differences\nas a vague/fuzzy date,\ne.g. 'yesterday', 'today' or 'next week'.\n\nIf this isn't quite what you're looking for,\nyou may be interested in vagueDate's little sister,\n[vagueTime.js][vague-time].\n\n## Installation\n\n### Node.js\n\n```\nnpm install vague-date\n```\n\n### Browser\n\nTo use vagueDate.js in a browser environment, you can\neither clone the git repository like so:\n\n```\ngit clone git@github.com:philbooth/vagueDate.js.git\n```\n\nOr use one of the growing number of package managers, such as\n[Jam],\n[Ender][ender]\n(the package name for both is 'vague-date'),\n[Bower][bower]\n('vagueDate.js')\nor [Component][component]\n('philbooth/vagueDate.js').\n\n## Usage\n\n### Loading the library\n\n#### Node.js\n\n```\nvar vagueDate = require('vague-date');\n```\n\n#### Browser\n\n```\n<script type=\"text/javascript\" src=\".../vagueDate.js/src/vagueDate.min.js\"></script>\n```\n\n### Calling the library\n\nvagueDate.js exports two public functions, `get` and `set`.\n\n#### vagueDate.get (options)\n\nReturns a vague date string\nbased on the argument(s) that you pass it.\n\nThe arguments are passed as properties on a single options object.\nThe optional property `from` is a `Date` instance or timestamp\ndenoting the origin point from which the vague date will be calculated,\ndefaulting to `Date.now()` if undefined.\nThe optional property `to` is a `Date` instance or timestamp\ndenoting the target point to which the vague date will be calculated,\ndefaulting to `Date.now()` if undefined.\nThe optional property `units` is a string,\ndenoting the units that the `from` and `to` timestamps are specified in,\neither `'s'` for seconds or `'ms'` for milliseconds,\ndefaulting to `'ms'` if undefined.\nThis property has no effect\nwhen `from` and `to` are `Date` instances\nrather than timestamps.\n\nEssentially, if `to` is less than `from` the returned vague date will\nindicate some point in the past. If `to` is greater than `from` it will\nindicate some point in the future.\n\n#### vagueDate.set (vagueDate)\n\nReturns an instance of `Date`,\nset according to the vague date string that is passed to it.\nThe returned date object\nwill always be set to the time of 23:59:59.999\nfor the day in question,\nunless the vague date 'now' is specified,\nin which case the returned object will represent the current date and time.\n\n### Examples\n\n```\nvagueDate.get({\n\tfrom: new Date(2013, 0, 1),\n\tto: new Date(2012, 11, 31)\n}); // Returns 'yesterday'\n\nvagueDate.get({\n\tfrom: new Date(2013, 0, 1),\n\tto: new Date(2013, 0, 2)\n}); // Returns 'tomorrow'\n\nvagueTime.set('today'); // Returns date object representing today at 23:59:59.999\n```\n\n## Development\n\n### Dependencies\n\nThe build environment relies on\n[Node.js][node],\n[NPM],\n[Jake],\n[JSHint],\n[Mocha],\n[Chai] and\n[UglifyJS].\nAssuming that you already have Node.js and NPM set up,\nyou just need to run `npm install`\nto install all of the dependencies as listed in `package.json`.\n\n### Unit tests\n\nThe unit tests are in `test/vagueDate.js`.\nYou can run them with the command `npm test` or `jake test`.\n\n[ci-image]: https://secure.travis-ci.org/philbooth/vagueDate.js.png?branch=master\n[ci-status]: http://travis-ci.org/#!/philbooth/vagueDate.js\n[vague-time]: https://github.com/philbooth/vagueTime.js\n[jam]: http://jamjs.org/\n[component]: https://github.com/component/component\n[ender]: https://github.com/ender-js/Ender\n[bower]: https://github.com/twitter/bower\n[node]: http://nodejs.org/\n[npm]: https://npmjs.org/\n[jake]: https://github.com/mde/jake\n[jshint]: https://github.com/jshint/node-jshint\n[mocha]: http://visionmedia.github.com/mocha\n[chai]: http://chaijs.com/\n[uglifyjs]: https://github.com/mishoo/UglifyJS\n\n",
  "_id": "vague-date@0.1.2",
  "dist": {
    "shasum": "2ffa2ae5f559ca6e1de446700ca09df935b3c733"
  },
  "_from": "vague-date@0.1.x"
}
