#!/usr/bin/env node

var path = require( 'path' );
var coffee = require( 'coffee-script' );
var CiaoScript = require( '../lib/CiaoScript' );
var TestRunner = require( '../lib/TestRunner' );
var Reporter = require( '../lib/Reporter' );
var Documentor = require( '../lib/Documentor' );
var Request = require( '../lib/Request' );
var Settings = require( '../lib/Settings' );
var TestSuite = require( '../lib/TestSuite' );
var program = require('commander');

program
  .version('0.0.1')
  .usage('[options] <file ...>')
  .option('-s, --silent', 'disable reporters')
  .option('-d, --documentation [dir]', 'generate documentation in output dir')
  .parse(process.argv);

settings = new Settings();

var suite = new TestSuite( settings, function( filename, suite )
{
  var script = new CiaoScript( filename, suite.settings );
  var runner = new TestRunner( script.parser.sections.assert );
  
  if( !program.silent ){
    runner.listener( Reporter );
  }

  var request = new Request();
  request.listener( runner.complete );

  if( program.documentation )
  {
    filename = path.resolve( filename );
    var docTarget = filename.replace( process.cwd(), process.cwd() + '/' + program.documentation );
    var docFile = docTarget.replace( '.coffee', '.md' );
    var documentation = new Documentor( script.parser.sections.request[0].title, docFile );
    runner.listener( documentation.documentTest );
    request.listener( documentation.documentTransaction );
  }

  request.transfer( script.request );
});

// Run script(s)
if( program.args[0] ){
  suite.walk( program.args[0] );
}
else {
  program.outputHelp();
}